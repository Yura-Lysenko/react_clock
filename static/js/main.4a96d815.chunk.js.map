{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","log","toLocaleTimeString","clearInterval","clockName","props","className","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","handlerClock","event","type","preventDefault","handlerSetInterval","setTimer","document","addEventListener","_","prevState","prevName","currentName","clear","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAG1BM,QAAQC,IAAI,EAAKT,MAAMC,KAAKS,wBAC3B,OAbP,kCAgBE,WACEL,OAAOM,cAAcP,KAAKD,WAjB9B,oBAoBE,WACE,IAAQS,EAAcR,KAAKS,MAAnBD,UACAX,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAFL,UAOE,sBAAME,UAAU,cAAhB,SACGb,EAAKS,8BAjChB,GAA2BK,a,MCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEtB,MAAyB,CACvBuB,UAAU,EACVX,UAAWI,KAHf,EAMEb,QAAU,EANZ,EA4BEqB,aAAe,SAACC,GACK,gBAAfA,EAAMC,OACRD,EAAME,iBACN,EAAKpB,SAAS,CAAEgB,UAAU,KAGT,UAAfE,EAAMC,MACR,EAAKnB,SAAS,CAAEgB,UAAU,KAnChC,EAuCEK,mBAAqB,WACnB,EAAKrB,SAAS,CAAEK,UAAWI,OAxC/B,EA2CEa,SAAWxB,OAAOC,YAAY,EAAKsB,mBAAoB,MA3CzD,uDAQE,WACExB,KAAKD,QAAUC,KAAKyB,SACpBC,SAASC,iBAAiB,QAAS3B,KAAKoB,cACxCM,SAASC,iBAAiB,cAAe3B,KAAKoB,gBAXlD,gCAcE,SAAmBQ,EAAiBC,GAClC,IAAMC,EAAWD,EAAUrB,UACrBuB,EAAc/B,KAAKJ,MAAMY,UAE3BsB,IAAaC,GACf3B,QAAQC,IAAR,wBAA6ByB,EAA7B,iBAA8CC,EAA9C,QAnBN,kCAuBE,WACExB,cAAcP,KAAKD,SACnBK,QAAQ4B,UAzBZ,oBA6CE,WACE,MAAgChC,KAAKJ,MAA7BuB,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UAElB,OACE,sBAAKE,UAAU,MAAf,UACE,6CAECS,GAAa,cAAC,EAAD,CAAOX,UAAWA,WApDxC,GAAyBG,aCZzBsB,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.4a96d815.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  date: Date;\n};\n\ntype Props = {\n  clockName: string\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        time is\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './Components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = this.setTimer;\n    document.addEventListener('click', this.handlerClock);\n    document.addEventListener('contextmenu', this.handlerClock);\n  }\n\n  componentDidUpdate(_: Readonly<{}>, prevState: Readonly<State>) {\n    const prevName = prevState.clockName;\n    const currentName = this.state.clockName;\n\n    if (prevName !== currentName) {\n      console.log(`Renamed from <${prevName}> to <${currentName}>`); // eslint-disable-line\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n    console.clear() // eslint-disable-line\n  }\n\n  handlerClock = (event: MouseEvent) => {\n    if (event.type === 'contextmenu') {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    }\n\n    if (event.type === 'click') {\n      this.setState({ hasClock: true });\n    }\n  };\n\n  handlerSetInterval = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  setTimer = window.setInterval(this.handlerSetInterval, 3300);\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (<Clock clockName={clockName} />)}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}